<style>
  .headFont h1 {
    font-size: 32px;
    font-weight: 700;
  }

  .page-body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  h3 {
    color: #FFF;

    font-family: Montserrat;
    font-size: 16px;
    font-style: normal;
    font-weight: 900;
    line-height: 251.724%;
  }

  .external-h3 {
    color: #FFF;

    font-family: Montserrat;
    font-size: 20px;
    font-style: normal;
    font-weight: 900;
    line-height: 251.724%;
  }

  .external-desc {
    color: #FFF;

    font-family: Montserrat;
    font-size: 14px;
    font-style: normal;
    font-weight: 500;
    line-height: 251.724%;
  }

  .flex-components {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 58px;
  }

  .external-group {
    margin-top: 45px;
    margin-bottom: 45px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  .external-subject-first {
    background-image: linear-gradient(#55d1ff, #3b81ff);
    z-index: 6;
    margin-left: -11px;
  }

  .external-subject-second {
    background-image: linear-gradient(#7164ff, #864bff);
    margin-left: -22px;
    z-index: 5;
  }

  .external-subject-third {
    background-image: linear-gradient(#d25785, #6839d4);
    margin-left: -22px;
    z-index: 4;
  }

  .external-subject-forth {
    background-image: linear-gradient(#f57696, #fcd943);
    margin-left: -22px;
    z-index: 3;
  }


  .external-value-items {
    border-radius: 0px 0px 12.9px 12.9px;
    border: 1px solid #FFF;
    width: 428px;
    height: 79px;
    flex-shrink: 0;
    display: flex;
    margin-top: -10px;
  }

  .external-item-first {
    width: 107px;
    border-right: 1px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .external-item-second {
    width: 107px;
    border-right: 1px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .external-item-third {
    width: 107px;
    border-right: 1px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .external-item-forth {
    width: 107px;
    display: flex;
    justify-content: center;
    align-items: center;

  }
</style>
<div>
  <ptitle>
    <h3>External / Public functions</h3>
  </ptitle>
  <p>
    External/public functions are functions that can be called from outside of a contract, i.e., they can be accessed by
    other contracts or external accounts on the blockchain. These functions are specified using the function
    declaration's external or public visibility modifier.
  </p>
</div>

<div>
  <h3>State variables</h3>
  <p>
    State variables are variables that are stored on the blockchain as part of the contract's state. They are declared
    at the contract level and can be accessed and modified by any function within the contract. State variables can be denied with a visibility modifier, such as public, private, or internal, which determines the access level of the
    variable.
  </p>
</div>

<% let internalCount=0; let publicCount=0; let pureCount=0; let viewCount=0; let payableCount=0; let totalFunctions=0;
  functions.tableRows.forEach(row=> {
  if (row.type==='func' ) {
  totalFunctions++;
  if (row.spec.includes('Internal 🔒')) {
  internalCount++;
  } else if (row.spec.includes('Public ❗️')) {
  publicCount++;
  }
  }
  });

  source.abi.forEach(item => {
  if (item.type === 'function') {
  if (item.stateMutability === 'pure') {
  pureCount++;
  } else if (item.stateMutability === 'view') {
  viewCount++;
  } else if (item.payable) {
  payableCount++;
  }
  }
  });
  const privateFunctionPattern = /function\s+\w+\s*\([^)]*\)\s*private/g;
  const payableFunctionPattern = /function\s+\w+\s*\([^)]*\)\s*payable/g;
  const pureFunctionPattern = /function\s+\w+\s*\([^)]*\)\s*pure/g;

  const privateMatches = source.source_code.match(privateFunctionPattern);
  const payableMatches = source.source_code.match(payableFunctionPattern);
  const pureMatches = source.source_code.match(pureFunctionPattern);

  const privateCount = privateMatches ? privateMatches.length : 0;
  pureCount = pureMatches ? pureMatches.length : 0;
  %>


  <div class="external-group">
    <h3 class="external-h3">Components</h3>
    <div class="flex-subjects">
      <div class="subject external-subject-first">
        External
      </div>
      <div class="subject external-subject-second">
        Internal
      </div>
      <div class="subject external-subject-third">
        Private
      </div>
      <div class="subject external-subject-forth">
        Pure
      </div>
    </div>
    <div class="external-value-items">
      <div class="item external-item-first">
        <%= publicCount %>
      </div>
      <div class="item external-item-second">
        <%= internalCount %>
      </div>
      <div class="item external-item-third">
        <%= privateCount %>
      </div>
      <div class="item external-item-forth">
        <%= pureCount %>
      </div>
    </div>

  </div>
