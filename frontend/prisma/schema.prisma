// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = "postgresql://postgres:IMGOjvv7NpZiKLhF@db.gssjknedxholzvlidfkr.supabase.co:5432/postgres"
}

model user {
    id                  Int                   @id @default(autoincrement())
    email               String                @unique
    username            String                @unique
    password            String
    role                Int                   @default(1)
    whitelisted         Boolean               @default(false)
    created_at          DateTime              @default(now())
    updated_at          DateTime              @default(now())
    user_meta           user_meta?
    credit_balances     credit_balance[]
    credit_payments     credit_payment[]
    credit_transactions credit_transactions[]
    paid_audits         paid_audits[]
}

model user_meta {
    id                Int     @id @default(autoincrement())
    user_id           Int     @unique
    social_twitter    String?
    social_telegram   String?
    social_discord    String?
    social_instagram  String?
    project_name      String?
    project_logo      String?
    project_email     String?
    project_website   String?
    project_twitter   String?
    project_telegram  String?
    project_instagram String?
    user              user    @relation(fields: [user_id], references: [id])
}

model credit_balance {
    id      Int  @id @default(autoincrement())
    user_id Int  @unique
    credits Int  @default(0)
    user    user @relation(fields: [user_id], references: [id])

    @@index([user_id], name: "idx_credit_balance_user")
}

model credit_payment {
    id         Int      @id @default(autoincrement())
    user_id    Int
    package    String
    amount_eth Float
    credits    Int
    hash       String   @unique
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    user       user     @relation(fields: [user_id], references: [id])

    @@index([user_id], name: "idx_credit_payment_user")
}

model credit_transactions {
    id         Int      @id @default(autoincrement())
    user_id    Int
    type       String
    cost       Int
    created_at DateTime @default(now())
    user       user     @relation(fields: [user_id], references: [id])

    @@index([user_id], name: "idx_credit_transactions_user")
}

model paid_audits {
    id                    Int      @id @default(autoincrement())
    user_id               Int
    address               String
    type                  String
    credit_transaction_id Int?
    status                String?
    created_at            DateTime @default(now())
    updated_on            DateTime @default(now())
    user                  user     @relation(fields: [user_id], references: [id])

    @@index([user_id], name: "idx_paid_audits_user")
}

model audit_requests {
    request_id Int      @id @default(autoincrement())
    contract   String   @unique
    status     String   @db.VarChar(50)
    status_log String?
    created_on DateTime @default(now())
    updated_on DateTime @default(now())

    @@map(name: "audit_requests")
}

model report_requests {
    id         Int      @id @default(autoincrement())
    user_id    Int
    address    String
    name       String?
    status     String
    image_url  String?
    created_at DateTime @default(now())
    updated_on DateTime @default(now())

    @@map(name: "report_requests")
}

model bounties {
    id                           Int       @id @default(autoincrement())
    bounty_id                    String
    name                         String
    link                         String?
    max_reward                   Int?
    vault_tvl                    Int?
    logo                         String?
    date                         DateTime?
    last_updated_date            DateTime?
    response_time_metric_enabled Boolean
    med_response_time            Int?
    total_paid_metric_enabled    Boolean
    total_paid_amount            Int?
    rating                       Float?
    firm                         Json
    category_list                String[]
    language_list                String[]
    source_code_list             String[]
    reference_list               String[]
}

model attacks {
    id            Int      @id @default(autoincrement())
    date          DateTime
    target        String
    description   String
    amount        String
    attack_vector String
    reference     String?
    hash          String   @unique
}
